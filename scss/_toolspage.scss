@mixin generateColorClasses($map) {
  @each $key, $color in $map {
    &.#{$key} {
      background-color: $color;

      &:hover {
        @if $key == "PDF-to-PDF-A" or $key == "pdf-to-markdown" {
          background-color: lighten($color, 14%);
        } @else {
          background-color: darken($color, 13%);
        }
      }
    }
  }
}

.tools-page {
  ::-webkit-scrollbar {
    display: none;
  }
  display: flex;
  .tool-bar {
    flex: 0 1 7.333%;
    @include extend("d-flex flex-column");
    .icon {
      width: 3em;
      height: 3em;
    }
    .tool-bar-button {
      @include extend("btn");
      &.input {
        @include extend("position-relative");
        input {
          @include extend("position-absolute");
          outline: 1px solid;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          opacity: 0;
          z-index: 0;
          cursor: pointer;
        }
      }
    }
  }
  .rest {
    flex: 1;
    .document-name {
      .input {
        font-weight: 400;
        &:focus {
          outline: none;
          caret-color: $pdf-color;
        }
      }
    }
  }
  // overlay
  .overlay {
    position: absolute;
    inset: 0px;
    background-color: rgb(0 0 0 / 80%);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    z-index: 1;
    color: white;
    border: 3px dashed;
    width: 100%;
    height: 100vh;
  }

  // .btn {
  //   @include generateColorClasses($color-map);
  // }
  // input[type="file"]
  .file-input {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    opacity: 0;

    &::before {
      content: "";
      display: block;
      position: inherit;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      cursor: pointer;
    }
  }
  .download-page {
    min-height: 50vh;
    .back-btn {
      display: flex;
      width: 40px;
      height: 40px;
      .icon {
        flex: 1;
      }
    }
  }
}
.editor-loader {
  position: absolute;
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: white;
  top: 0;
  left: 0;
}
.md-2pdf {
  display: flex;
  @media (max-width: 600px) {
    flex-wrap: wrap;
  }
  height: 100%;

  .editor {
    flex: 0 1 50%;
    height: 100%;
    resize: none;
  }

  .react-markdown-container {
    flex: 0 1 50%;
    padding: 15px;
    max-height: 100vh;
    overflow: auto;
  }
}

.upload-btn,
.submit-btn {
  font-size: 2em;
  cursor: pointer;
}
.upload-btn,
.submit-btn,
.download-btn,
.btn {
  @include generateColorClasses($color-map);
}

.translate-pdf {
  .translate-file-selector {
    height: 50vh;
    %flex-centered {
      @include extend("flex justify-content-center align-items-center");
    }
    .dropzone {
      @extend %flex-centered;
    }
    .devider {
      width: 2px;
      background-color: #dee2e6;
    }
    .file-selector {
      @extend %flex-centered;
    }
    .upload-btn {
      input {
        opacity: 0;
        cursor: pointer;
        top: 0;
        left: 0;
        @include extend("w-100 h-100");
        &::-webkit-file-upload-button {
          @include extend("w-100 h-100 d-block");
          cursor: pointer;
        }
      }
    }
  }
}
